<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using System.Threading.Tasks;
using CorePCL;
using <#= _DataModel.ProjectName #>.Base;
using <#= _DataModel.ProjectName #>.Implementation.ViewModel;
using <#= _DataModel.ProjectName #>.Interface.Repository;
using <#= _DataModel.ProjectName #>.Interface.Service;

namespace <#= _DataModel.ProjectName #>.Implementation.Repository
{
    public class <#= _DataModel.RepositoryName #><T> : ProjectBaseRepository, <#= _DataModel.RepositoryInterfaceName #><T>
        where T : BaseViewModel
    {
        <#= _DataModel.ServiceInterfaceName #> _Service;

        public <#= _DataModel.RepositoryName #>(IMasterRepository masterRepository, <#= _DataModel.ServiceInterfaceName #><T> service)
            : base(masterRepository)
        {
            _Service = service;
        }

        public async Task <#= _DataModel.EventName #>(<#= _DataModel.ViewModelName #> model, Action<T> completeAction)
        {
            var serviceReturnModel = await _Service.<#= _DataModel.EventName #>(model);
            completeAction(serviceReturnModel);
        }
    }
}